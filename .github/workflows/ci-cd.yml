name: TecX-DSP-CI-CD

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install Frontend Dependencies
        run: |
          cd frontend
          npm install

      - name: Run Frontend Tests
        run: |
          cd frontend
          npm test

      - name: Setup Python
        uses: actions/setup-python@v3
        with:
          python-version: 3.9

      - name: Install Backend Dependencies
        run: |
          cd backend
          pip install -r requirements.txt

      - name: Run Backend Tests
        run: |
          cd backend
          pytest

  docker-build:
    runs-on: ubuntu-latest
    needs: build-test
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Log in to DockerHub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Build and Push Backend Image
        run: |
          docker build -t myrepo/backend:latest ./backend
          docker push myrepo/backend:latest

      - name: Build and Push Frontend Image
        run: |
          docker build -t myrepo/frontend:latest ./frontend
          docker push myrepo/frontend:latest

  deploy:
    runs-on: ubuntu-latest
    needs: docker-build
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Setup Kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: v1.26.0

      - name: Configure Kubernetes
        run: |
          echo "${{ secrets.KUBE_CONFIG }}" | base64 --decode > $HOME/.kube/config

      - name: Deploy to Kubernetes
        run: kubectl apply -f orchestration/k8s-manifests/
